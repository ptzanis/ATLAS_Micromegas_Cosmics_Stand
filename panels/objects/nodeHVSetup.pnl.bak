V 14
1
LANG:1 0 
PANEL,-1 -1 558 970 N "WF_PanelBackground" 4
"$layer"
"$mode"
"$node"
"$type"
E E E E E 1 -1 -1 0  5.329070518200751e-15 -3.000000000000014
""0  1
E "string node=$node; 
string mode=$mode;  
string type=$type; 
string layer=$layer;

void refreshConfigurationTable(bool nodeMode,bool layerMode) {
      
   channelsTable.tableMode(TABLE_SELECT_NOTHING);
   channelsTable.font(\"Utopia\"); 

    dyn_string dpes;
    float tempi0, tempv0, temprUp, temprDwn, temptripTime, VMax;
    string alias;
    bool isOn;
    
    dyn_string allChannels,aliasAllChannels;
    dynAppend(allChannels,channelsReturn(nodeMode,layerMode));
    dynAppend(aliasAllChannels,aliasAllChannelsReturn(nodeMode,layerMode));
    
    for (int i = 1; i <= dynlen(allChannels); i++){
        dpGet(allChannels[i] + \".readBackSettings.i0:_original.._value\", tempi0);
        dpGet(allChannels[i] + \".readBackSettings.v0:_original.._value\", tempv0);
        dpGet(allChannels[i] + \".readBackSettings.rUp:_original.._value\", temprUp);
        dpGet(allChannels[i] + \".readBackSettings.rDwn:_original.._value\", temprDwn);
        dpGet(allChannels[i] + \".readBackSettings.tripTime:_original.._value\", temptripTime);
        alias =aliasAllChannels[i];
        dpGet(allChannels[i] + \".readBackSettings.vMaxSoftValue:_original.._value\", VMax);
        channelsTable.appendLine(\"Alias\", alias, \"Channels\", substr(allChannels[i],13),
                                 \"v0\", tempv0, \"i0\", tempi0, \"rUp\", temprUp,
                                 \"rDwn\", temprDwn, \"trip\", temptripTime, \"VMax\", VMax);
        dpGet(allChannels[i] + \".actual.isOn:_original.._value\", isOn);
        if (isOn) {
            channelsTable.cellBackColRC(i-1, \"Alias\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"Channels\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"v0\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"i0\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"rUp\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"rDwn\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"trip\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"VMax\", \"FwStateOKPhysics\");
            } 

    }
    
    channelsTable.tableMode(TABLE_SELECT_MULTIPLE);
    channelsTable.selectByClick(TABLE_SELECT_LINE);
    
}

dyn_string channelsReturn(bool nodeMode,bool layerMode)
{  
    dyn_string allChannels,aliasAllChannels;
    dyn_string stripChannels,driftChannels;
    string channel;
    
    // Node Mode 
    if(nodeMode)
    {    
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripChannels); 
    dynAppend(aliasAllChannels,stripChannels);  
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftChannels); 
    dynAppend(aliasAllChannels,driftChannels);   
    
    for(int i=1; i<=dynlen(aliasAllChannels); i++)
    {
     dpGet(\"N\"+node+\".Mapping.\"+aliasAllChannels[i]+\".Channel\",channel);
     channel=getSystemName()+\"CAEN/\"+channel;
     dynAppend(allChannels,channel);
    }        
   }//node mode
    
    // Layer Mode 
    if(layerMode)
    { 
       int countChannel=1;
    if(mode==\"ValidationQA\")
    {
     if(type==\"SM1\" || type==\"LM1\")  
     {
        for(int i=1;i<=5;i++)
       {
           channel=\"L\"+layer+\"L\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
           
           channel=\"L\"+layer+\"R\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
       }      
     }
     
  if(type==\"SM2\" || type==\"LM2\")  
     {
        for(int i=6;i<=8;i++)
       {
           channel=\"L\"+layer+\"L\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
           
           channel=\"L\"+layer+\"R\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
       }       
     }                  
       channel=\"L\"+layer+\"D\"; 
       dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);   
       allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];          
    }   
   }//Layer mode
      
   return allChannels;      
}

dyn_string aliasAllChannelsReturn(bool nodeMode,bool layerMode)
{  
    dyn_string aliasAllChannels;
    dyn_string stripChannels,driftChannels;

    
    //  Node Mode 
    if(nodeMode)
    {    
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripChannels); 
    dynAppend(aliasAllChannels,stripChannels);  
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftChannels); 
    dynAppend(aliasAllChannels,driftChannels);   
    
    }//node mode
      
    if(layerMode)
    {
   int countChannel=1;
      if(mode==\"ValidationQA\")
    {
     if(type==\"SM1\" || type==\"LM1\")  
     {
        for(int i=1;i<=5;i++)
       {
           aliasAllChannels[countChannel]=\"L\"+layer+\"L\"+i;
           countChannel++;          
           aliasAllChannels[countChannel]=\"L\"+layer+\"R\"+i;
           countChannel++;
       }    
     }

      if(type==\"SM2\" || type==\"LM2\")  
     {
        for(int i=6;i<=8;i++)
       {
           aliasAllChannels[countChannel]=\"L\"+layer+\"L\"+i;
           countChannel++;          
           aliasAllChannels[countChannel]=\"L\"+layer+\"R\"+i;
           countChannel++;
       }    
     }            
    aliasAllChannels[countChannel]=\"L\"+layer+\"D\";       
   }           
  }    
    
   return aliasAllChannels;      
}
/*
dyn_string channelLayerAliasReturn(string node,string mode,string type,string layer)
{
  dyn_string channelAlias,channel;
  int countChannel;
  if(mode==\"ValidationQA\")
     {
       
     if(type==\"SM1\"||\"LM1\")
       {
         for(int i=1;i<=5;i++)
         {
              channelAlias[countChannel]=\"L\"+layer+\"L\"+i;
              countChannel++;
              channelAlias[countChannel]=\"L\"+layer+\"L\"+i;
         }
      }
  
    }
  
}
*/
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
2 1
"titleLayer_"
""
1 218.4410850187287 2 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
"main()
{
     string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;

     
        
     this.text(\"Node \"+node+\", \"+type);
}" 0
 E 2 1 3 2 1 E U  0 E 218.4410850187287 2 334 24
0 2 2 "0s" 0 0 0 192 0 0  218.4410850187287 2 1
1
LANG:1 27 Utopia,-1,19,5,75,0,0,0,0,0
0 1
LANG:1 11 Node X, XMX
13 2
"setButton"
""
1 285.2478733590649 837.4559310201203 E E E 0 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  219.4410850187287 835.2898640008086 333.4410850187287 869.194305142742

T 
1
LANG:1 3 Set
"main()
{
     
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);  
                
          
      for (int i = 1; i <= dynlen(lines); i++) {
        if (textField1.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.v0:_original.._value\", textField1.text);
        if (textField2.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.i0:_original.._value\", textField2.text);
        if (textField3.text)  
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.rUp:_original.._value\", textField3.text);
        if (textField4.text) 
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.rDwn:_original.._value\", textField4.text); 
        if (textField5.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.tripTime:_original.._value\", textField5.text); 
        if (textField6.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.vMaxSoftValue:_original.._value\", textField6.text); 
        if (hvSelectionCombo.text!=\"\")  
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.v0:_original.._value\",(float)lines[i][3]+(float)hvSelectionCombo.text());
 
      }    
  
    delay(2);
        
    textField1.text = \"\";
    textField2.text = \"\";
    textField3.text = \"\";
    textField4.text = \"\";
    textField5.text = \"\";
    textField6.text = \"\";
    hvSelectionCombo.text=\"\";   
    
    channelsTable.deleteAllLines;
    refreshConfigurationTable(TRUE,FALSE);
    
}
    
 " 0
 E E E
14 3
"textField1"
""
1 -194.2794574906357 791.2425568030632 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  189.7205425093643 770.1266627633272 252.7205425093643 794.7640695041189
3 "4d" 4 1 0 1 0 -1  "main(mapping event)
{
      hvSelectionCombo.text=\"\";
}" 0
 E E
14 4
"textField2"
""
1 7.266592152651929 771.3084510286385 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  316.3734673237843 770.1925569889025 375.0023531425247 795.2585351582658
3 "2.2f" 5 1 0 1 0 -1  E E E
14 5
"textField3"
""
1 199.8713155759029 751.8282913475632 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  459.8713155759028 770.7123973078275 522.8713155759028 795.4013923011229
3 "3d" 3 1 0 1 0 -1  E E E
14 6
"textField4"
""
1 178.8713155759029 820.8282913475632 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  459.8713155759028 799.7123973078274 522.8713155759028 824.54424944398
3 "3d" 3 1 0 1 0 -1  E E E
14 7
"textField5"
""
1 231.0186291534019 738.9275676322327 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  314.9588767699278 799.5616735924966 374.9862205199279 824.1156780154085
3 "0d" 0 1 0 1 0 -1  E E E
13 8
"onButton"
""
1 -6.005358531240404 768.8626813507219 E E E 0 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  14.72054250936435 775.2425568030632 81.72054250936435 798.2425568030632

T 
1
LANG:1 2 ON
"main()
{       
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);

    for (int i = 1; i <= dynlen(lines); i++)
        {dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.onOff:_original.._value\", 1);
    }   
      
   delay(2);
   channelsTable.deleteAllLines;
   refreshConfigurationTable(TRUE,FALSE);               

}
" 0
 E E E
13 9
"offButton"
""
1 -12.34006247860909 830.0270275821729 E E E 0 E 1 E N "_ButtonText" E N "_3DFace" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  14.72054250936435 801.2425568030632 81.72054250936435 824.2425568030632

T 
1
LANG:1 3 OFF
"main()
{    
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);

    for (int i = 1; i <= dynlen(lines); i++)
        {dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.onOff:_original.._value\", 0);
    }   
      
   delay(2);
   channelsTable.deleteAllLines;  
   refreshConfigurationTable(TRUE,FALSE);               

}
" 0
 E E E
14 10
"textField6"
""
1 -19.47215540624004 780.3067786465073 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  137.5278445937599 799.1908846067715 200.5278445937599 823.8282913475632
3 "3d" 3 1 0 1 0 -1  E E E
6 11
"lockHolder"
""
1 280 900 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
    dyn_string textfields, enabled, toLockEdit, toLockEnabled; 
    
    toLockEdit = makeDynString(\"textField1\", \"textField2\", \"textField3\", \"textField4\",
              \"textField5\", \"textField6\",\"hvSelectionCombo\");
    toLockEnabled = makeDynString(\"onButton\", \"offButton\", \"setButton\");
    
//     if (!onButton.enabled) {
        setValue(\"lockHolder\",\"fill\",\"[pattern,[fit,png,locked.png]]\");
        lockInfoText.text = \"Click the lock to prevent further changes.\";
        for (int i = 1; i <= dynlen(toLockEdit); i++) {
            setValue(toLockEdit[i], \"enabled\", FALSE);
        }
        for (int i = 1; i <= dynlen(toLockEnabled); i++) {
            setValue(toLockEnabled[i], \"enabled\", FALSE);
        }
//     }
    

    
}
" 0
 "main()
{
    
    dyn_string textfields, enabled, toLockEdit, toLockEnabled; 
    
    toLockEdit = makeDynString(\"textField1\", \"textField2\", \"textField3\", \"textField4\",
              \"textField5\", \"textField6\",\"hvSelectionCombo\");
    toLockEnabled = makeDynString(\"onButton\", \"offButton\", \"setButton\");
    
    if (!onButton.enabled) {
        setValue(\"lockHolder\",\"fill\",\"[pattern,[fit,png,unlocked.png]]\");
        lockInfoText.text = \"Click the lock to prevent further changes.\";
        for (int i = 1; i <= dynlen(toLockEdit); i++) {
            setValue(toLockEdit[i], \"enabled\", TRUE);
        }
        for (int i = 1; i <= dynlen(toLockEnabled); i++) {
            setValue(toLockEnabled[i], \"enabled\", TRUE);
        }
        
    textField1.text = \"\";
    textField2.text = \"\";
    textField3.text = \"\";
    textField4.text = \"\";
    textField5.text = \"\";
    textField6.text = \"\";  
    hvSelectionCombo.text=\"\";
        
        
    }
    else {
        setValue(\"lockHolder\",\"fill\",\"[pattern,[fit,png,locked.png]]\");
        lockInfoText.text = \"Click the lock to make changes.\";
        for (int i = 1; i <= dynlen(toLockEdit); i++) {
            setValue(toLockEdit[i], \"enabled\", FALSE);
        }
        for (int i = 1; i <= dynlen(toLockEnabled); i++) {
            setValue(toLockEnabled[i], \"enabled\", FALSE);
        }
        
     
        
        
        
    }

    
    
    
}
" 0
 0 1 1 2 1 E 0.7055135627341089 0 0.7518750000000042 -177.5437975655505 166.0718749999965 2  1 0  "pictures/unlocked.png" 4294967295 E 280 895 320 935
2 12
"PRIMITIVE_TEXT7"
""
1 90.72054250936435 775.2425568030632 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
12 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 87 775.2425568030632 136.7205425093643 790
0 2 2 "0s" 0 0 0 194 0 0  136.7205425093643 775.2425568030632 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 Voltage:
2 13
"PRIMITIVE_TEXT8"
""
1 270.3986593259028 775.1925569889032 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 252 775.1925569889032 316.3986593259028 790
0 2 2 "0s" 0 0 0 194 0 0  316.3986593259028 775.1925569889032 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Imax (uA):
2 14
"PRIMITIVE_TEXT9"
""
1 90.72054250936435 803.8139853744918 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 99 803.8139853744918 136.7205425093643 819
0 2 2 "0s" 0 0 0 194 0 0  136.7205425093643 803.8139853744918 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 5 Vmax:
2 15
"PRIMITIVE_TEXT10"
""
1 413.8713155759028 775.712397307828 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 399 775.712397307828 459.8713155759028 791
0 2 2 "0s" 0 0 0 194 0 0  459.8713155759028 775.712397307828 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 Ramp Up:
2 16
"PRIMITIVE_TEXT11"
""
1 413.8713155759028 804.337397307828 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 381 804.337397307828 459.8713155759028 819
0 2 2 "0s" 0 0 0 194 0 0  459.8713155759028 804.337397307828 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Ramp Down:
2 17
"PRIMITIVE_TEXT12"
""
1 268.9588767699278 804.0616735924972 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 251 804.0616735924972 314.9588767699278 819
0 2 2 "0s" 0 0 0 194 0 0  314.9588767699278 804.0616735924972 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Trip Time:
22 18
"hvSelectionCombo"
""
1 138.7205425093643 779.2425568030632 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
18 0 0 0 0 0
E E "main(bool enter)
{
  textField1.text(\"\");
}" 0

0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  136.7205425093643 772.7330831188526 189.2468582988382 795.5225568030631
11
1
LANG:1 0 

0
1
LANG:1 4 -100

0
1
LANG:1 3 -50

0
1
LANG:1 3 -20

0
1
LANG:1 3 -10

0
1
LANG:1 2 -5

0
1
LANG:1 2 +5

0
1
LANG:1 3 +10

0
1
LANG:1 3 +20

0
1
LANG:1 3 +50

0
1
LANG:1 4 +100

0

E
E
E
 0 0
30 19
"FRAME1"
""
1 10 213 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
19 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 1.052655381086025 0 1.224519575694047 -5.127894484957397 498.3989315348454 0 E 10 213 531 311
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0 1
LANG:1 38 HV Actions (Choose Section from table)
13 20
"closeButton"
""
1 495 947 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
20 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  493 937.3000000000001 555.25 963.3000000000001

T 
1
LANG:1 5 Close
"main(mapping event)
{
  PanelOff();
}" 0
 E E E
2 21
"lockInfoText"
""
1 808 593.075 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
    this.text(\"Click the lock to make changes.\");
}" 0
 E 0 1 1 2 1 E U  0 E 809.9999667594204 593.075 1154.99996675942 613.075
0 2 2 "0s" 0 0 0 64 0 0  809.9999667594204 593.075 1
1
LANG:1 27 Utopia,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 33   Click the lock to make changes.
25 22
"channelsTable"
""
1 5 -197.5511534173742 E E E 1 E 1 E N "_WindowText" E N {236,236,236} E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,11,5,50,0,0,0,0,0
0  11.98100172711572 24 535.9810017271157 758.0000000000002
"main()
{
    
     string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;

       
  
    
    for (int i = 3; i < 8; i++) {
        this.columnWidth(i, 43);
    }
    

    dyn_string allChannels,aliasAllChannels;
    dyn_string stripChannels,driftChannels;
    string channel;
    

    
    refreshConfigurationTable(TRUE,FALSE);
    
    dyn_string allChannels;
    dynAppend(allChannels,channelsReturn(TRUE,FALSE));
    
     
    for (int i = 1; i <= dynlen(allChannels); i++){
        dpConnect(\"colorTable\",allChannels[i] + \".actual.isOn:_online.._value\");
    }   

}


void colorTable(string channelDp, bool isOn) {


     string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;

    dyn_string allChannels;
    dynAppend(allChannels,channelsReturn(TRUE,FALSE));
    
    dyn_string channelDpParts = strsplit(channelDp, \".\");
    channelDp = channelDpParts[1];  
//     int i = dynContains(allChannels, channelDp);
    
    for(int i=1;i<=dynlen(allChannels);i++)
    {
      if(allChannels[i]==channelDp)
      {
      if (isOn) {
        channelsTable.cellBackColRC(i - 1, \"Alias\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"Channels\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"v0\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"i0\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"rUp\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"rDwn\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"trip\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"VMax\", \"FwStateOKPhysics\");
      } else {
        channelsTable.cellBackColRC(i - 1, \"Alias\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"Channels\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"v0\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"i0\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"rUp\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"rDwn\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"trip\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"VMax\", \"{236,236,236}\");
    }
   }
  } 
}
 
    " 0
"main(int row, string column, string value)
{
    
//     dyn_string line;
//     line = channelsTable.getLineN(row);

    
//     channelsTable.
//     if (column == \"Alias\") {
//         DebugN(\"Only now came.\");
//     }
      
//     textField1.text = line[3];
//     textField2.text = line[4];
//     textField3.text = line[5];
//     textField4.text = line[6];
//     textField5.text = line[7];
//     textField6.text = line[8];
}
" 0
 1 0 1 8 1 "Alias" 3 1 0 "[0s,,,ALIGNMENT_BEGINNING]" 1
LANG:1 7 Section
E
1
LANG:1 0 

40 "Channels" 19 1 0 "[0s,,,ALIGNMENT_BEGINNING]" 1
LANG:1 16 Hardware Address
E
1
LANG:1 0 

200 "v0" 4 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 7 Voltage
E
1
LANG:1 0 

50 "i0" 5 1 0 "[0.2f,False,False,ALIGNMENT_CENTER,False]" 1
LANG:1 4 Imax
E
1
LANG:1 0 

65 "rUp" 4 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 3 rUp
E
1
LANG:1 0 

48 "rDwn" 5 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 5 rDown
E
1
LANG:1 0 

60 "trip" 5 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 4 Trip
E
1
LANG:1 0 

60 "VMax" 4 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 4 Vmax
E
1
LANG:1 0 

54 
16 16 "" 1 1
LANG:1 2 #1
10 8
1
LANG:1 27 Utopia,-1,11,5,50,0,0,0,0,0
0 0 2 0 1 7
1 0
30 23
"FRAME2"
""
1 10 213 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
23 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 0.9288461538461538 0 0.8865979381443303 -4.106643356643344 686.1546391752577 0 E 10 213 531 311
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0 1
LANG:1 13 Configuration
13 24
"PUSH_BUTTON1"
""
1 252.1818181818182 934 E E E 1 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
24 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  186.375029841482 931.8737279858663 300.375029841482 958.612102108488

T 
1
LANG:1 5 Load 
"main()
{
     /*
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);  
                
          
      for (int i = 1; i <= dynlen(lines); i++) {
        if (textField1.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.v0:_original.._value\", textField1.text);
        if (textField2.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.i0:_original.._value\", textField2.text);
        if (textField3.text)  
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.rUp:_original.._value\", textField3.text);
        if (textField4.text) 
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.rDwn:_original.._value\", textField4.text); 
        if (textField5.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.tripTime:_original.._value\", textField5.text); 
        if (textField6.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.vMaxSoftValue:_original.._value\", textField6.text); 
        if (hvSelectionCombo.text!=\"\")  
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.v0:_original.._value\",(float)lines[i][3]+(float)hvSelectionCombo.text());
 
      }    
  
    delay(2);
        
    textField1.text = \"\";
    textField2.text = \"\";
    textField3.text = \"\";
    textField4.text = \"\";
    textField5.text = \"\";
    textField6.text = \"\";
    hvSelectionCombo.text=\"\";   
    
    channelsTable.deleteAllLines;
    refreshConfigurationTable(TRUE,FALSE);
    */
  
    
}
    
 " 0
 E E E
2 25
"PRIMITIVE_TEXT1"
""
1 117.1818181818182 889 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 117.1818181818182 889 161.1818181818182 904
0 2 2 "0s" 0 0 0 192 0 0  117.1818181818182 889 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 7 Status:
14 26
"configurationStatusField"
""
1 163.1818181818178 891 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0  161.1818181818178 887 368.1818181818178 908
3 "0s" 0 0 0 0 0 -1  E "main()
{
  string node=$node;
  this.name(this.name()+\"_N\"+node);
}" 0
 E
7 27
"configurationStatusLED"
""
1 681.5 534.5 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
27 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "1"
"main()
{
  string node=$node;
  this.name(this.name()+\"_N\"+node);
  EP_setBackColor();
}
void EP_setBackColor()
{
  dyn_errClass err;
  string node=$node;
  if( !dpExists( \"System1:N\"+node+\".Configuration:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_setBackColorCB\", 
            \"System1:N\"+node+\".Configuration:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


void EP_setBackColorCB(string dpSource, bool boNewValue)
{
  if (!boNewValue)
    setValue(\"\", \"backCol\", \"Red\");
  else
    setValue(\"\", \"backCol\", \"Green\");
}

// SimpleCtrlScript {EP_setBackColor}
// DP {System1:N1.Configuration}
// DPConfig {:_online.._value}
// DPType {bool}
// AlertHdl {FALSE}
// DPEInvalid {}
// DPEConfigInvalid {}
// Operator1 {notequal}
// Operant1 {0}
// Color1 {Red}
// Operator2 {equal}
// Operant2 {1}
// Color2 {Green}
// SimpleCtrlScriptEnd {EP_setBackColor}
" 0
 E 0 1 3 2 1 E 1 0 1 -299.3181818181819 362.5 1 E 681.5 534.5 9.5 9.5
2 28
"PRIMITIVE_TEXT13"
""
1 15.18181818181818 913 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
E E 2 1 3 2 1 E U  0 E 15.18181818181818 913 80.18181818181819 928
0 2 2 "0s" 0 0 0 192 0 0  15.18181818181818 913 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Directory:
13 29
"browseButton"
""
1 103.1818181818182 217 E E E 1 E 1 E N {0,0,0} E N {236,236,236} E E
 E E
29 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:10001 0 

1
"layoutAlignment" "AlignCenter"
2
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:10001 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0  450.1818181818182 901.4375 484.1818181818182 935.4375

P 
14215660
"pictures/fileselektor.xpm"
2
LANG:1 0 
LANG:10001 0 
"main()
{
    
    string sPath;
    string systemName;
    int iErr;
	
    if(shapeExists(\"cbSystem\"))
        systemName = cbSystem.text;
    else
        systemName = \"\";
  
    sPath = \"C:\\\\Projects\\\\TBSCS\";
    iErr = folderSelector( sPath );
    
    if(( iErr >= 1 ) && ( strlen( sPath ) > 0 )) {
	    sPath += \"/\";
        if (_WIN32) strreplace( sPath, \"/\", \"//\" ); 
    	strreplace(sPath, \"//\", \"/\");
        strreplace(sPath, \"//\", \"/\");
	    // update the widget with the directory path
        destFolderTextField.text = sPath;
    }
}

" 0
 E E E
14 30
"destFolderTextField"
""
1 78.18181818181824 877 E E E 1 E 1 E N "_WindowText" E N {236,236,236} E E
 E E
30 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,11,5,50,0,0,0,0,0
0  75.90026379870119 905.7500000000001 449.9002637987013 931
3 "0s" 0 0 0 0 0 -1  E "main()
{
    
//     string currentDate = formatTime(\"%d_%m\", getCurrentTime());
//     this.text(\"C:/\" + \"TB_data_\" + currentDate + \"/\");
     this.text(PROJ_PATH);
}
" 0
 E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
