V 12
1
LANG:1 8 PanelOff
PANEL,-1 -1 1135 782 N "_3DFace" 0
E E E E E 1 -1 -1 0  140 70
""0  1
E E 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
14 2
"TEXT_FIELD1"
""
1 180 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  178 118 242 142
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPLU1\"){
       x=dpSet(\"IPLU1.Mapping\",Channeldp);       
       this.text(newValue);
       }
 
 }

" 0
 E
14 10
"TEXT_FIELD2"
""
1 400 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  398 118 462 142
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp, float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPRU1\"){
       x=dpSet(\"IPRU1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 }

" 0
 E
10 14
"POLYGON11"
""
1 150 200 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "FwStateOKPhysics"
E E 2 0 1 2 1 E 0.8235294117647058 0 0.8518518518518519 56.47058823529413 49.62962962962962 1 E 5 150 200
320 60
490 200
320 330
150 200
 1
14 17
"TEXT_FIELD3"
""
1 290 200 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  288 198 352 222
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPUM\"){
       x=dpSet(\"IPUM.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 18
"TEXT_FIELD4"
""
1 225 310 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  223 308 287 332
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPLU2\"){
       x=dpSet(\"IPLU2.Mapping\",Channeldp);
       this.text(newValue);
     }
 }

" 0
 E
14 19
"TEXT_FIELD5"
""
1 355 310 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  353 308 417 332
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPRU2\"){
       x=dpSet(\"IPRU2.Mapping\",Channeldp);
       this.text(newValue);
       
     }
   
 }

" 0
 E
14 26
"TEXT_FIELD6"
""
1 250 370 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  248 368 312 392
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp, float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPLD1\"){
       x=dpSet(\"IPLD1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 27
"TEXT_FIELD7"
""
1 330 370 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
27 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  328 368 392 392
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPRD1\"){
       x=dpSet(\"IPRD1.Mapping\",Channeldp);
       this.text(newValue);
       }
 
 }

" 0
 E
14 28
"TEXT_FIELD8"
""
1 255 430 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  253 428 317 452
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPLD2\"){
       x=dpSet(\"IPLD2.Mapping\",Channeldp);
       this.text(newValue);
       }
 }

" 0
 E
14 29
"TEXT_FIELD9"
""
1 325 430 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  323 428 387 452
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp, float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPRD2\"){
       x=dpSet(\"IPRD2.Mapping\",Channeldp);
       this.text(newValue);
       }
 
 }

" 0
 E
14 39
"TEXT_FIELD10"
""
1 720 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
39 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  718 118 782 142
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOLU1\"){
       x=dpSet(\"HOLU1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 40
"TEXT_FIELD11"
""
1 950 120 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
40 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  948 118 1012 142
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HORU1\"){
       x=dpSet(\"HORU1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 41
"TEXT_FIELD12"
""
1 830 200 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
41 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  828 198 892 222
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOUM\"){
       x=dpSet(\"HOUM.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 42
"TEXT_FIELD13"
""
1 765 310 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
42 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  763 308 827 332
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp, float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOLU2\"){
       x=dpSet(\"HOLU2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 43
"TEXT_FIELD14"
""
1 895 310 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
43 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  893 308 957 332
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HORU2\"){
       x=dpSet(\"HORU2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 44
"TEXT_FIELD15"
""
1 790 370 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
44 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  788 368 852 392
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOLD1\"){
       x=dpSet(\"HOLD1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 45
"TEXT_FIELD16"
""
1 870 370 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
45 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  868 368 932 392
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HORD1\"){
       x=dpSet(\"HORD1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 46
"TEXT_FIELD17"
""
1 795 430 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
46 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  793 428 857 452
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOLD2\"){
       x=dpSet(\"HOLD2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 47
"TEXT_FIELD18"
""
1 865 430 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
47 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  863 428 927 452
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      alias = dpGetAlias(allChannels[i]+ \".ntc.ntc\" + k + \".mdeg:_original.._value\");
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HORD2\"){
       x=dpSet(\"HORD2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
6 48
"RECTANGLE2"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
48 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 -376 82 1 E 380 40 430 90
6 49
"RECTANGLE3"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
49 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 -376 112 1 E 380 40 430 90
6 50
"RECTANGLE4"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
50 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 44 82 1 E 380 40 430 90
6 51
"RECTANGLE5"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
51 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 44 102 1 E 380 40 430 90
6 52
"RECTANGLE6"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
52 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 164 102 1 E 380 40 430 90
6 53
"RECTANGLE7"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
53 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 164 82 1 E 380 40 430 90
6 54
"RECTANGLE8"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
54 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 584 82 1 E 380 40 430 90
6 55
"RECTANGLE9"
""
1 380 40 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
55 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.2 0 0.2 584 102 1 E 380 40 430 90
14 56
"TEXT_FIELD19"
""
1 80 60 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
56 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  78 58 142 82
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
      // dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
     //dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
   float y;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPCL2\"){
       x=dpSet(\"IPCL2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 }


" 0
 E
14 58
"TEXT_FIELD21"
""
1 80 140 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
58 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  78 138 142 162
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
      // dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias1\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      //dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias1\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias1(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPCL1\"){
       x=dpSet(\"IPCL1.Mapping\",Channeldp);
       this.text(newValue);
       }
 }

" 0
 E
14 59
"TEXT_FIELD22"
""
1 500 130 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
59 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  498 128 562 152
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPCR1\"){
       x=dpSet(\"IPCR1.Mapping\",Channeldp);
       this.text(newValue);
       }
  
 }

" 0
 E
14 60
"TEXT_FIELD23"
""
1 500 60 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
60 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  498 58 562 82
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"IPCR2\"){
       x=dpSet(\"IPCR2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 }

" 0
 E
14 61
"TEXT_FIELD24"
""
1 620 130 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
61 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  618 128 682 152
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOCL1\"){
       x=dpSet(\"HOCL1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 62
"TEXT_FIELD25"
""
1 620 60 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
62 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  618 58 682 82
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOCL2\"){
       x=dpSet(\"HOCL2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 63
"TEXT_FIELD26"
""
1 1040 60 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
63 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  1038 58 1102 82
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOCR2\"){
       x=dpSet(\"HOCR2.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
14 64
"TEXT_FIELD27"
""
1 1040 130 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
64 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0  1038 128 1102 152
3 "0s" 0 0 0 0 0 -1  E "main()
{
   dyn_string alias;    
  dyn_string allChannels,channelname,channels;
   
   dyn_dyn_float  mdeg;
   bool isOn;
   allChannels = dpNames(\"*\",\"ElmbBarrel\");
  for(int i =1; i<=dynlen(allChannels); i++){
    for (int j=1; j<=10; j++){
       dpGet(allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\",mdeg[j]);
       //alias = dpGetAlias(allChannels[i]+ \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
       dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc0\" + (j-1) + \".mdeg:_original.._value\");
 
             
     //  TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc0\"+(j-1),\"mdeg\",mdeg[j]);
       //DebugN(\"Alias:\",allchannels[i]);
     }
    for (int k=10; k<=29; k++){
      dpGet(allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\",mdeg[k]);
      dpConnect(\"SearchAlias\",allChannels[i] + \".ntc.ntc\" + k + \".mdeg:_original.._value\");
     // TempSensors.appendLine(\"Alias\",alias,\"Channel\",allChannels[i]+\".ntc.ntc\"+k,\"mdeg\",mdeg[k]);
    }
  }
}



void SearchAlias(string Channeldp,float newValue){ 
   float x;
 string alias = dpGetAlias(Channeldp);
   if (alias == \"HOCR1\"){
       x=dpSet(\"HOCR1.Mapping\",Channeldp);
       this.text(newValue);
       }
   
 
 }

" 0
 E
10 65
"POLYGON29"
""
1 320 60 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
65 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "FwStateOKPhysics"
E E 2 1 1 2 1 E 1 0 1 0 40 1 E 4 320 60
460 180
490 60
320 60
 1
10 66
"POLYGON30"
""
1 320 60 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
66 0 0 0 0 0
E E E
0
1
LANG:1 0 

2
"hoverfclr" "N \"_Transparent\""
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 0 40 1 E 4 320 60
180 180
150 60
320 60
 1
10 67
"POLYGON31"
""
1 460 180 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
67 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 1 1 E 1 0 1 0 40 1 E 5 460 180
420 300
320 300
320 290
460 180
 1
10 68
"POLYGON32"
""
1 180 180 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
68 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 0 40 1 E 5 180 180
220 300
320 300
320 290
180 180
 1
10 69
"POLYGON33"
""
1 220 310 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
69 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 0 40 1 E 5 220 310
240 380
320 380
320 310
220 310
 1
10 70
"POLYGON34"
""
1 320 310 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
70 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 0 40 1 E 5 320 310
320 380
400 380
420 310
320 310
 1
10 71
"POLYGON35"
""
1 240 380 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
71 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 0 40 1 E 5 240 380
260 440
320 440
320 380
240 380
 1
10 72
"POLYGON36"
""
1 320 440 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
72 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 0 40 1 E 5 320 440
380 440
400 380
320 380
320 440
 1
10 73
"POLYGON37"
""
1 320 60 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
73 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 3 1 1 E 1 0 1 540 40 1 E 4 320 60
180 180
150 60
320 60
 1
10 74
"POLYGON38"
""
1 150 200 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
74 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 0.8235294117647058 0 0.8518518518518519 596.4705882352941 48.88888888888889 1 E 5 150 200
320 60
490 200
320 330
150 200
 1
10 75
"POLYGON39"
""
1 320 60 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
75 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 4 320 60
460 180
490 60
320 60
 1
10 76
"POLYGON40"
""
1 180 180 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
76 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 5 180 180
220 300
320 300
320 290
180 180
 1
10 77
"POLYGON41"
""
1 460 180 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
77 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 5 460 180
420 300
320 300
320 290
460 180
 1
10 78
"POLYGON42"
""
1 220 310 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
78 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 5 220 310
240 380
320 380
320 310
220 310
 1
10 79
"POLYGON43"
""
1 320 310 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
79 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 5 320 310
320 380
400 380
420 310
320 310
 1
10 80
"POLYGON44"
""
1 240 380 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
80 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 5 240 380
260 440
320 440
320 380
240 380
 1
10 81
"POLYGON45"
""
1 320 440 E E E 1 E 1 E N {0,0,0} E N "FwStateOKPhysics" E E
 E E
81 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 2 0 1 2 1 E 1 0 1 540 40 1 E 5 320 440
380 440
400 380
320 380
320 440
 1
13 82
"closeButton"
""
1 1033.27731092437 460 E E E 1 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
82 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 Lucida Grande,8,-1,5,50,0,0,0,0,0
0  998 458 1101 492

T 
1
LANG:1 5 Close
"main()
{
  PanelOff();
}" 0
 E E E
2 85
"PRIMITIVE_TEXT3"
""
1 260 40 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
85 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 3.380952380952381 0 3.058823529411765 -382.3809523809524 -51.76470588235293 0 E 190 30 228 43
0 2 2 "0s" 0 0 0 192 0 0  190 30 1
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0 1
LANG:1 7 IP SIDE
2 86
"PRIMITIVE_TEXT4"
""
1 786.7619047619048 36.11764705882352 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
86 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 3.380952380952381 0 3.058823529411765 144.3809523809524 -55.64705882352941 0 E 190 30 233 43
0 2 2 "0s" 0 0 0 192 0 0  190 30 1
1
LANG:1 37 MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0
0 1
LANG:1 7 HO SIDE
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
