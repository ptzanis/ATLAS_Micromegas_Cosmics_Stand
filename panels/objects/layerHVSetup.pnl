V 14
1
LANG:1 0 
PANEL,-1 -1 793 317 N "WF_PanelBackground" 6
"$layer"
"$mode"
"$node"
"$type"
"$x"
"$y"
"main()
{  
 
     string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;
     int x=$x;
     int y=$y;
//      int x=550;
//      int y=30;
     
     
      if(x==20)
          this.size(265,235);
     
     if(mode==\"ValidationQA\")
     {
       
     if(type==\"SM1\"||type==\"LM1\")
       {
         for(int i=1;i<=5;i++)
         {
        addSymbol(myModuleName(), myPanelName(), \"objects/channel.pnl\", \"channel_pnl_Ref_\" + node + \"_\" + layer,
                          makeDynString(\"$node:\"+node,\"$chName:\" + \"\", \"$dpe:\" +\"L\"+layer+\"L\"+i, \"$x:\" + x, \"$y:\" + y,\"$sector:\"+\"0\"), x + 2, y, 0, 1.0, 0.9);
         y = y + 18;
        addSymbol(myModuleName(), myPanelName(), \"objects/channel.pnl\", \"channel_pnl_Ref_\" + node + \"_\" + layer,
                          makeDynString(\"$node:\"+node,\"$chName:\" + \"\", \"$dpe:\" +\"L\"+layer+\"R\"+i, \"$x:\" + x, \"$y:\" + y,\"$sector:\"+\"0\"), x + 2, y, 0, 1.0, 0.9);  
         y = y + 18;
        }
          addSymbol(myModuleName(), myPanelName(), \"objects/channel.pnl\", \"channel_pnl_Ref_\" + node + \"_\" + layer,
                         makeDynString(\"$node:\"+node,\"$chName:\" + \"\", \"$dpe:\" +\"L\"+layer+\"D\", \"$x:\" + x, \"$y:\" + y,\"$sector:\"+\"0\"), x + 2, y, 0, 1.0, 0.9);     
       
      }
        
        if(type==\"SM2\"||type==\"LM2\")
       {
         for(int i=6;i<=8;i++)
         {
        addSymbol(myModuleName(), myPanelName(), \"objects/channel.pnl\", \"channel_pnl_Ref_\" + node + \"_\" + layer,
                          makeDynString(\"$node:\"+node,\"$chName:\" + \"\", \"$dpe:\" +\"L\"+layer+\"L\"+i, \"$x:\" + x, \"$y:\" + y,\"$sector:\"+\"0\"), x + 2, y, 0, 1.0, 0.9);
         y = y + 18;
        addSymbol(myModuleName(), myPanelName(), \"objects/channel.pnl\", \"channel_pnl_Ref_\" + node + \"_\" + layer,
                          makeDynString(\"$node:\"+node,\"$chName:\" + \"\", \"$dpe:\" +\"L\"+layer+\"R\"+i, \"$x:\" + x, \"$y:\" + y,\"$sector:\"+\"0\"), x + 2, y, 0, 1.0, 0.9);  
         y = y + 18;
        }
          addSymbol(myModuleName(), myPanelName(), \"objects/channel.pnl\", \"channel_pnl_Ref_\" + node + \"_\" + layer,
                         makeDynString(\"$node:\"+node,\"$chName:\" + \"\", \"$dpe:\" +\"L\"+layer+\"D\", \"$x:\" + x, \"$y:\" + y,\"$sector:\"+\"0\"), x + 2, y, 0, 1.0, 0.9);     
       
      }            
    }
    
}" 0
 E E E E 1 -1 -1 0  120 10
""0  1
E "string node=$node; 
string mode=$mode;  
string type=$type; 
string layer=$layer;

void refreshConfigurationTable(bool nodeMode,bool layerMode) {
      
   channelsTable.tableMode(TABLE_SELECT_NOTHING);
   channelsTable.font(\"Utopia\"); 

    dyn_string dpes;
    float tempi0, tempi1, tempv0, temprUp, temprDwn, temptripTime, VMax;
    string alias;
    bool isOn;
    
    dyn_string allChannels,aliasAllChannels;
    dynAppend(allChannels,channelsReturn(nodeMode,layerMode));
    dynAppend(aliasAllChannels,aliasAllChannelsReturn(nodeMode,layerMode));
    
    for (int i = 1; i <= dynlen(allChannels); i++){
        dpGet(allChannels[i] + \".readBackSettings.i0:_original.._value\", tempi0);
        dpGet(allChannels[i] + \".readBackSettings.i1:_original.._value\", tempi1);
        dpGet(allChannels[i] + \".readBackSettings.v0:_original.._value\", tempv0);
        dpGet(allChannels[i] + \".readBackSettings.rUp:_original.._value\", temprUp);
        dpGet(allChannels[i] + \".readBackSettings.rDwn:_original.._value\", temprDwn);
        dpGet(allChannels[i] + \".readBackSettings.tripTime:_original.._value\", temptripTime);
        alias =aliasAllChannels[i];
        dpGet(allChannels[i] + \".readBackSettings.vMaxSoftValue:_original.._value\", VMax);
        channelsTable.appendLine(\"Alias\", alias, \"Channels\", substr(allChannels[i],13),
                                 \"v0\", tempv0, \"i0\", tempi0,\"i1\", tempi1, \"rUp\", temprUp,
                                 \"rDwn\", temprDwn, \"trip\", temptripTime, \"VMax\", VMax);
        dpGet(allChannels[i] + \".actual.isOn:_original.._value\", isOn);
        if (isOn) {
            channelsTable.cellBackColRC(i-1, \"Alias\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"Channels\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"v0\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"i0\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"i1\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"rUp\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"rDwn\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"trip\", \"FwStateOKPhysics\");
            channelsTable.cellBackColRC(i-1, \"VMax\", \"FwStateOKPhysics\");
            } 

    }
    
    channelsTable.tableMode(TABLE_SELECT_MULTIPLE);
    channelsTable.selectByClick(TABLE_SELECT_LINE);
    
}

dyn_string channelsReturn(bool nodeMode,bool layerMode)
{  
    dyn_string allChannels,aliasAllChannels;
    dyn_string stripChannels,driftChannels;
    string channel;
    
    // Node Mode 
    if(nodeMode)
    {    
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripChannels); 
    dynAppend(aliasAllChannels,stripChannels);  
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftChannels); 
    dynAppend(aliasAllChannels,driftChannels);   
    
    for(int i=1; i<=dynlen(aliasAllChannels); i++)
    {
     dpGet(\"N\"+node+\".Mapping.\"+aliasAllChannels[i]+\".Channel\",channel);
     channel=getSystemName()+\"CAEN/\"+channel;
     dynAppend(allChannels,channel);
    }        
   }//node mode
    
    // Layer Mode 
    if(layerMode)
    { 
       int countChannel=1;
    if(mode==\"ValidationQA\")
    {
     if(type==\"SM1\" || type==\"LM1\")  
     {
        for(int i=1;i<=5;i++)
       {
           channel=\"L\"+layer+\"L\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
           
           channel=\"L\"+layer+\"R\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
       }      
     }
     
  if(type==\"SM2\" || type==\"LM2\")  
     {
        for(int i=6;i<=8;i++)
       {
           channel=\"L\"+layer+\"L\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
           
           channel=\"L\"+layer+\"R\"+i;
           dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);
           allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];
           countChannel++;
       }       
     }                  
       channel=\"L\"+layer+\"D\"; 
       dpGet(\"N\"+node+\".Mapping.\"+channel+\".Channel\",allChannels[countChannel]);   
       allChannels[countChannel]=getSystemName()+\"CAEN/\"+allChannels[countChannel];          
    }   
   }//Layer mode
      
   return allChannels;      
}

dyn_string aliasAllChannelsReturn(bool nodeMode,bool layerMode)
{  
    dyn_string aliasAllChannels;
    dyn_string stripChannels,driftChannels;

    
    //  Node Mode 
    if(nodeMode)
    {    
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripChannels); 
    dynAppend(aliasAllChannels,stripChannels);  
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftChannels); 
    dynAppend(aliasAllChannels,driftChannels);   
    
    }//node mode
      
    if(layerMode)
    {
   int countChannel=1;
      if(mode==\"ValidationQA\")
    {
     if(type==\"SM1\" || type==\"LM1\")  
     {
        for(int i=1;i<=5;i++)
       {
           aliasAllChannels[countChannel]=\"L\"+layer+\"L\"+i;
           countChannel++;          
           aliasAllChannels[countChannel]=\"L\"+layer+\"R\"+i;
           countChannel++;
       }    
     }

      if(type==\"SM2\" || type==\"LM2\")  
     {
        for(int i=6;i<=8;i++)
       {
           aliasAllChannels[countChannel]=\"L\"+layer+\"L\"+i;
           countChannel++;          
           aliasAllChannels[countChannel]=\"L\"+layer+\"R\"+i;
           countChannel++;
       }    
     }            
    aliasAllChannels[countChannel]=\"L\"+layer+\"D\";       
   }           
  }    
    
   return aliasAllChannels;      
}
/*
dyn_string channelLayerAliasReturn(string node,string mode,string type,string layer)
{
  dyn_string channelAlias,channel;
  int countChannel;
  if(mode==\"ValidationQA\")
     {
       
     if(type==\"SM1\"||\"LM1\")
       {
         for(int i=1;i<=5;i++)
         {
              channelAlias[countChannel]=\"L\"+layer+\"L\"+i;
              countChannel++;
              channelAlias[countChannel]=\"L\"+layer+\"L\"+i;
         }
      }
  
    }
  
}
*/
" 0
 3
"CBRef" "1"
"EClose" E
"dpi" "96"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 2
"channelsTable"
""
1 1.811744386873924 -57.06534602521226 E E E 1 E 0 E N "_WindowText" E N {236,236,236} E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,11,5,50,0,0,0,0,0
0  9.000000000000004 7.999999999999986 544.9999999999999 231
"main()
{
    
     string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;
     int x=$x;
     
     if(x==550)
       this.visible(TRUE);
       
  
    
    for (int i = 3; i < 9; i++) {
        this.columnWidth(i, 38);
    }
    

    dyn_string allChannels,aliasAllChannels;
    dyn_string stripChannels,driftChannels;
    string channel;
    

    
    refreshConfigurationTable(FALSE,TRUE);
    
    dyn_string allChannels;
    dynAppend(allChannels,channelsReturn(FALSE,TRUE));
    
     
    for (int i = 1; i <= dynlen(allChannels); i++){
        dpConnect(\"colorTable\",allChannels[i] + \".actual.isOn:_online.._value\");
    }   

}


void colorTable(string channelDp, bool isOn) {


     string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;

    dyn_string allChannels;
    dynAppend(allChannels,channelsReturn(FALSE,TRUE));
    
    dyn_string channelDpParts = strsplit(channelDp, \".\");
    channelDp = channelDpParts[1];  
//     int i = dynContains(allChannels, channelDp);
    
    for(int i=1;i<=dynlen(allChannels);i++)
    {
      if(allChannels[i]==channelDp)
      {
      if (isOn) {
        channelsTable.cellBackColRC(i - 1, \"Alias\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"Channels\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"v0\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"i0\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"rUp\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"rDwn\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"trip\", \"FwStateOKPhysics\");
        channelsTable.cellBackColRC(i - 1, \"VMax\", \"FwStateOKPhysics\");
      } else {
        channelsTable.cellBackColRC(i - 1, \"Alias\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"Channels\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"v0\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"i0\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"rUp\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"rDwn\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"trip\", \"{236,236,236}\");
        channelsTable.cellBackColRC(i - 1, \"VMax\", \"{236,236,236}\");
    }
   }
  } 
}
 
    " 0
"main(int row, string column, string value)
{
    
//     dyn_string line;
//     line = channelsTable.getLineN(row);

    
//     channelsTable.
//     if (column == \"Alias\") {
//         DebugN(\"Only now came.\");
//     }
      
//     textField1.text = line[3];
//     textField2.text = line[4];
//     textField3.text = line[5];
//     textField4.text = line[6];
//     textField5.text = line[7];
//     textField6.text = line[8];
}
" 0
 1 0 1 9 1 "Alias" 3 1 0 "[0s,,,ALIGNMENT_BEGINNING]" 1
LANG:1 7 Section
E
1
LANG:1 0 

40 "Channels" 19 1 0 "[0s,,,ALIGNMENT_BEGINNING]" 1
LANG:1 16 Hardware Address
E
1
LANG:1 0 

200 "v0" 4 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 7 Voltage
E
1
LANG:1 0 

50 "i0" 5 1 0 "[0.2f,False,False,ALIGNMENT_CENTER,False]" 1
LANG:1 2 i0
E
1
LANG:1 0 

65 "i1" 5 1 0 "[0.2f,False,False,ALIGNMENT_CENTER,False]" 1
LANG:1 2 i1
E
1
LANG:1 0 

65 "rUp" 4 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 3 rUp
E
1
LANG:1 0 

48 "rDwn" 5 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 5 rDown
E
1
LANG:1 0 

60 "trip" 2 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 4 Trip
E
1
LANG:1 0 

30 "VMax" 4 1 0 "[0s,,,ALIGNMENT_CENTER]" 1
LANG:1 4 Vmax
E
1
LANG:1 0 

54 
16 16 "" 1 1
LANG:1 2 #1
10 8
1
LANG:1 27 Utopia,-1,11,5,50,0,0,0,0,0
0 0 2 0 1 7
1 0
2 3
"titleLayer_"
""
1 584 5.999999999999986 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

4
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
"transformable" "0"
"main()
{
       string node=$node; 
     string mode=$mode;  
     string type=$type; 
     string layer=$layer;
     int x=$x;
     int y=$y;
     
     this.position(x,y-25);
     
     
     this.text(\"Node \"+node+\", \"+type+\", Layer \"+layer);
}" 0
 E 2 1 3 2 1 E U  0 E 584 5.999999999999986 779 28
0 2 2 "0s" 0 0 0 192 0 0  584 5.999999999999986 1
1
LANG:1 27 Utopia,-1,19,5,75,0,0,0,0,0
0 1
LANG:1 21 Node X, XMX, Layer X 
13 4
"setButton"
""
1 595 263 E E E 0 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  543.0988316896583 260.8339329806884 633.1261754396583 294.7383741226217

T 
1
LANG:1 3 Set
"main()
{
     
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);  
                
          
      for (int i = 1; i <= dynlen(lines); i++) {
        if (textField1.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.v0:_original.._value\", textField1.text);
        if (textField2.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.i0:_original.._value\", textField2.text);
        if (textField3.text)  
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.rUp:_original.._value\", textField3.text);
        if (textField4.text) 
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.rDwn:_original.._value\", textField4.text); 
        if (textField5.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.tripTime:_original.._value\", textField5.text); 
        if (textField6.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.vMaxSoftValue:_original.._value\", textField6.text); 
        if (hvSelectionCombo.text!=\"\")  
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.v0:_original.._value\",(float)lines[i][3]+(float)hvSelectionCombo.text());
        if (isetField.text)
            dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.i1:_original.._value\", isetField.text); 
      }    
  
    delay(3);
        
    textField1.text = \"\";
    textField2.text = \"\";
    textField3.text = \"\";
    textField4.text = \"\";
    textField5.text = \"\";
    textField6.text = \"\";
    hvSelectionCombo.text=\"\";   
    
    channelsTable.deleteAllLines;
    refreshConfigurationTable(FALSE,TRUE);
    
}
    
 " 0
 E E E
14 5
"textField1"
""
1 -191 271 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
4 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  193 249.8841059602641 256 274.5215127010557
3 "4d" 4 1 0 1 0 -1  "main(mapping event)
{
      hvSelectionCombo.text=\"\";
}" 0
 E E
14 6
"textField2"
""
1 10.54604964328758 247.0658942255753 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  319.6529248144199 245.9500001858394 378.2818106331603 271.0159783552026
3 "2.2f" 5 1 0 1 0 -1  E E E
14 7
"textField3"
""
1 203.1507730665386 231.5857345445001 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  463.1507730665384 250.4698405047643 526.1507730665385 275.1588354980597
3 "3d" 3 1 0 1 0 -1  E E E
14 8
"textField4"
""
1 182.1507730665386 300.5857345445 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  463.1507730665384 279.4698405047642 526.1507730665385 304.3016926409168
3 "3d" 3 1 0 1 0 -1  E E E
14 9
"textField5"
""
1 234.2980866440376 225.6850108291695 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  318.2383342605634 286.3191167894334 378.2656780105636 310.8731212123454
3 "0d" 0 1 0 1 0 -1  E E E
13 10
"onButton"
""
1 -2.725901040604754 248.6201245476587 E E E 0 E 1 E N "_ButtonText" E N {236,236,236} E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  18 255 85 278

T 
1
LANG:1 2 ON
"main()
{       
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);

    for (int i = 1; i <= dynlen(lines); i++)
        {dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.onOff:_original.._value\", 1);
    }   
      
   delay(2);
   channelsTable.deleteAllLines;
   refreshConfigurationTable(FALSE,TRUE);               

}
" 0
 E E E
13 11
"offButton"
""
1 -9.060604987973441 309.7844707791097 E E E 0 E 1 E N "_ButtonText" E N "_3DFace" E E
 E E
10 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  18 281 85 304

T 
1
LANG:1 3 OFF
"main()
{    
    dyn_int selected;
    dyn_dyn_string lines;
    
    selected=channelsTable.getSelectedLines();
    
    for (int i = 1; i <= dynlen(selected); i++)
        lines[i] = channelsTable.getLineN(selected[i]);

    for (int i = 1; i <= dynlen(lines); i++)
        {dpSetWait(getSystemName() + \"CAEN/\" + lines[i][2] + \".settings.onOff:_original.._value\", 0);
    }   
      
   delay(2);
   channelsTable.deleteAllLines;  
   refreshConfigurationTable(FALSE,TRUE); 

}
" 0
 E E E
14 12
"textField6"
""
1 -16.19269791560439 260.0642218434441 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  140.8073020843956 278.9483278037083 203.8073020843955 303.5857345445
3 "3d" 3 1 0 1 0 -1  E E E
6 13
"lockHolder"
""
1 280 900 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
12 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
    dyn_string textfields, enabled, toLockEdit, toLockEnabled; 
    
    toLockEdit = makeDynString(\"textField1\", \"textField2\", \"textField3\", \"textField4\",
              \"textField5\", \"textField6\",\"hvSelectionCombo\",\"isetField\");
    toLockEnabled = makeDynString(\"onButton\", \"offButton\", \"setButton\");
    
//     if (!onButton.enabled) {
        setValue(\"lockHolder\",\"fill\",\"[pattern,[fit,png,locked.png]]\");
        lockInfoText.text = \"Click the lock to prevent further changes.\";
        for (int i = 1; i <= dynlen(toLockEdit); i++) {
            setValue(toLockEdit[i], \"enabled\", FALSE);
        }
        for (int i = 1; i <= dynlen(toLockEnabled); i++) {
            setValue(toLockEnabled[i], \"enabled\", FALSE);
        }
//     }
    

    
}
" 0
 "main()
{
    
    dyn_string textfields, enabled, toLockEdit, toLockEnabled; 
    
    toLockEdit = makeDynString(\"textField1\", \"textField2\", \"textField3\", \"textField4\",
              \"textField5\", \"textField6\",\"hvSelectionCombo\",\"isetField\");
    toLockEnabled = makeDynString(\"onButton\", \"offButton\", \"setButton\");
    
    if (!onButton.enabled) {
        setValue(\"lockHolder\",\"fill\",\"[pattern,[fit,png,unlocked.png]]\");
        lockInfoText.text = \"Click the lock to prevent further changes.\";
        for (int i = 1; i <= dynlen(toLockEdit); i++) {
            setValue(toLockEdit[i], \"enabled\", TRUE);
        }
        for (int i = 1; i <= dynlen(toLockEnabled); i++) {
            setValue(toLockEnabled[i], \"enabled\", TRUE);
        }
        
    textField1.text = \"\";
    textField2.text = \"\";
    textField3.text = \"\";
    textField4.text = \"\";
    textField5.text = \"\";
    textField6.text = \"\";  
    hvSelectionCombo.text=\"\";
    isetField.text = \"\";   
        
    }
    else {
        setValue(\"lockHolder\",\"fill\",\"[pattern,[fit,png,locked.png]]\");
        lockInfoText.text = \"Click the lock to make changes.\";
        for (int i = 1; i <= dynlen(toLockEdit); i++) {
            setValue(toLockEdit[i], \"enabled\", FALSE);
        }
        for (int i = 1; i <= dynlen(toLockEnabled); i++) {
            setValue(toLockEnabled[i], \"enabled\", FALSE);
        }
        
     
        
        
        
    }

    
    
    
}
" 0
 0 1 1 2 1 E 0.6733174603174584 0 0.65 453.4711111111116 -331 2  1 0  "pictures/unlocked.png" 4294967295 E 280 895 320 935
2 14
"PRIMITIVE_TEXT7"
""
1 94 255 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 90 255 140 270
0 2 2 "0s" 0 0 0 194 0 0  140 255 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 Voltage:
2 15
"PRIMITIVE_TEXT8"
""
1 273.6781168165385 250.9500001858401 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 276 250.9500001858401 319.6781168165385 266
0 2 2 "0s" 0 0 0 194 0 0  319.6781168165385 250.9500001858401 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 i0 (uA):
2 16
"PRIMITIVE_TEXT9"
""
1 93.99999999999999 283.5714285714286 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 101 283.5714285714286 140 299
0 2 2 "0s" 0 0 0 194 0 0  140 283.5714285714286 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 5 Vmax:
2 17
"PRIMITIVE_TEXT10"
""
1 417.1507730665385 255.4698405047649 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
16 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 402 255.4698405047649 463.1507730665385 270
0 2 2 "0s" 0 0 0 194 0 0  463.1507730665385 255.4698405047649 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 Ramp Up:
2 18
"PRIMITIVE_TEXT11"
""
1 417.1507730665385 284.0948405047649 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 384 284.0948405047649 463.1507730665385 299
0 2 2 "0s" 0 0 0 194 0 0  463.1507730665385 284.0948405047649 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Ramp Down:
2 19
"PRIMITIVE_TEXT12"
""
1 272.2383342605634 290.8191167894341 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 254 290.8191167894341 318.2383342605634 306
0 2 2 "0s" 0 0 0 194 0 0  318.2383342605634 290.8191167894341 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 10 Trip Time:
22 20
"hvSelectionCombo"
""
1 142 259 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  140 252.4905263157894 192.5263157894739 275.28
11
1
LANG:1 0 

0
1
LANG:1 4 -100

0
1
LANG:1 3 -50

0
1
LANG:1 3 -20

0
1
LANG:1 3 -10

0
1
LANG:1 2 -5

0
1
LANG:1 2 +5

0
1
LANG:1 3 +10

0
1
LANG:1 3 +20

0
1
LANG:1 3 +50

0
1
LANG:1 4 +100

0

E
"main()
{
  textField1.text(\"\");
}" 0

E
 0 0
30 22
"FRAME1"
""
1 10 213 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
21 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 1.279465159968195 0 0.7424840788184082 -4.116534783143447 80.82993556629346 0 E 10 213 531 311
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0 1
LANG:1 38 HV Actions (Choose Section from table)
13 23
"closeButton"
""
1 724 292 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
22 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,16,5,75,0,0,0,0,0
0  722 282.3 784.25 308.3

T 
1
LANG:1 5 Close
"main(mapping event)
{
  PanelOff();
}" 0
 E E E
30 24
"FRAME2"
""
1 0 -7 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
23 0 0 0 0 0
E E E
1
1
LANG:1 0 

3
"layoutAlignment" "AlignNone"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 2 1 3 2 1 E 3.172 0 1.405286343612334 0 5.837004405286342 0 E 0 -7 251 221
1
LANG:1 27 Utopia,-1,12,5,50,0,0,0,0,0
0 1
LANG:1 0 
2 25
"lockInfoText"
""
1 879 283 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
24 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
    this.text(\"Click the lock to make changes.\");
}" 0
 E 0 1 1 2 1 E U  0 E 880.9999667594204 283 1225.99996675942 303
0 2 2 "0s" 0 0 0 64 0 0  880.9999667594204 283 1
1
LANG:1 27 Utopia,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 33   Click the lock to make changes.
14 26
"isetField"
""
1 9.867932826749097 268.1158940397353 E E E 0 E 1 E N "_WindowText" E N "_Window" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"layoutAlignment" "AlignCenter"
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0  318.9748079978815 266.9999999999993 377.6036938166219 292.0659781693626
3 "2.2f" 5 1 0 1 0 -1  E E E
2 27
"PRIMITIVE_TEXT14"
""
1 272 272 E E E 1 E 1 E N "black" E N {247,247,247} E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

3
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
E E 0 1 1 2 1 E U  0 E 274 272 318 287
0 2 2 "0s" 0 0 0 194 0 0  318 272 1
1
LANG:1 27 Utopia,-1,13,5,75,0,0,0,0,0
0 1
LANG:1 8 i1 (uA):
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
