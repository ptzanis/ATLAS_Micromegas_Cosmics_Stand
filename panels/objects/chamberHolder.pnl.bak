V 14
1
LANG:1 0 
PANEL,-1 -1 269 844 N "WF_PanelBackground" 4
"$mode"
"$node"
"$sector"
"$type"
"#uses \"HVMMGeneral.ctl\"
main()
{
     string mode=$mode;  
     string node=$node; 
     string type=$type; 
     string sector=$sector;

       if(mode==\"ValidationQA\")   
       {        
         loadChannels(node,type,sector);        
       }
       if(mode==\"CosmicsBasic\" || mode==\"CosmicsExtra\")
       { 
         this.size(270,2750);         
         loadChannelsCosmics(sector); // 1=sector1 (N1-4), 2=sector2 (N5-8)
       }


    
}" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "void loadAllPlots(string node){
  
    int removeElement;
    bool isChecked ;
    dyn_string DpesToPlot;
    dyn_string stripChannels, driftChannels;
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Strips\",stripChannels);
    dpGet(\"N\"+node+\".Mapping.ChannelsTotal.Drift\",driftChannels);
    
    for(int i=1;i<=dynlen(stripChannels);i++)
    {
    dynAppend(DpesToPlot,\"N\"+node+\".Mapping.\"+stripChannels[i]);
    }
    for(int i=1;i<=dynlen(driftChannels);i++)
    {    
    dynAppend(DpesToPlot,\"N\"+node+\".Mapping.\"+driftChannels[i]);
    }

    dyn_string clearPlots;
    dynClear(clearPlots);
    dpSet(\"N\"+node+\".DpesToPlot\",clearPlots);
    dpSet(\"N\"+node+\".DpesToPlot\",DpesToPlot);
        
    int plotsNumber = dynlen(DpesToPlot);
    string channel,alias,nodeSubs;
    if ((isChecked == 1) && (plotsNumber > 1)) removePlots(plotsNumber - 1,node);
    else if ((isChecked == 1) && (plotsNumber = 1)) ;
    else removePlots(plotsNumber + 1,node);
    
        if (dynlen(DpesToPlot) > 0) {
        dyn_int gridSize = splitScreenGridDimensions(plotsNumber, SIZE_OF_PLOTTABLE_AREA_X, SIZE_OF_PLOTTABLE_AREA_Y);
        dyn_dyn_int initCoo = gridToCoordinates(plotsNumber, gridSize);
        dyn_dyn_float scaling = calculateScales(plotsNumber, gridSize);

        dyn_string exceptionInfo;          
        for (int i = 1; i <= plotsNumber; i++) {
          dpGet(DpesToPlot[i]+\".Channel\",channel);
          dpGet(DpesToPlot[i]+\".Alias\",alias);
          nodeSubs=substr(DpesToPlot[i],0,2);
            fwTrending_addQuickFaceplate(\"embModuleN\"+node,\"N\"+node, \"Plot\" + i, 
                                      makeDynString(\"CAEN/\"+channel+ \".actual.vMon\", \"CAEN/\"+channel + \".actual.iMon\"),
                                      initCoo[i][1], initCoo[i][2], exceptionInfo, \"_FwTrendingQuickPlotDefaults\", scaling[i][1], scaling[i][2],alias,nodeSubs);
              }                                 
        }   
  
       dyn_string allCheckboxes = getShapes(myModuleName(), myPanelName(), \"shapeType\", \"CHECK_BOX\");
     for( int i = 1; i <= dynlen(allCheckboxes); i++) {
       DebugN(\"Number of checkBoxes -----> \"+ allCheckboxes[i]);
         setValue(myModuleName() + \".\" + myPanelName() + \":\" + allCheckboxes[i], \"state\",0,TRUE);        
     }
  
  
  
}

void unloadAllPlots(string node){
  
    int removeElement;
    bool isChecked ;
    dyn_string DpesToPlot;
    dpGet(\"N\"+node+\".DpesToPlot\",DpesToPlot);

    
/*
    dyn_string clearPlots;
    dynClear(clearPlots);
    dpSet(\"N\"+node+\".DpesToPlot\",clearPlots);
    dpSet(\"N\"+node+\".DpesToPlot\",DpesToPlot);
*/
        
        
    int plotsNumber = dynlen(DpesToPlot);
    string channel,alias,nodeSubs;
    if ((isChecked == 1) && (plotsNumber > 1)) removePlots(plotsNumber - 1,node);
    else if ((isChecked == 1) && (plotsNumber = 1)) ;
    else removePlots(plotsNumber + 1,node);
    
        if (dynlen(DpesToPlot) > 0) {
        dyn_int gridSize = splitScreenGridDimensions(plotsNumber, SIZE_OF_PLOTTABLE_AREA_X, SIZE_OF_PLOTTABLE_AREA_Y);
        dyn_dyn_int initCoo = gridToCoordinates(plotsNumber, gridSize);
        dyn_dyn_float scaling = calculateScales(plotsNumber, gridSize);

        dyn_string exceptionInfo;          
        for (int i = 1; i <= plotsNumber; i++) {
          dpGet(DpesToPlot[i]+\".Channel\",channel);
          dpGet(DpesToPlot[i]+\".Alias\",alias);
          nodeSubs=substr(DpesToPlot[i],0,2);
            fwTrending_addQuickFaceplate(\"embModuleN\"+node,\"N\"+node, \"Plot\" + i, 
                                      makeDynString(\"CAEN/\"+channel+ \".actual.vMon\", \"CAEN/\"+channel + \".actual.iMon\"),
                                      initCoo[i][1], initCoo[i][2], exceptionInfo, \"_FwTrendingQuickPlotDefaults\", scaling[i][1], scaling[i][2],alias,nodeSubs);
              }                                 
        }   
  
       dyn_string allCheckboxes = getShapes(myModuleName(), myPanelName(), \"shapeType\", \"CHECK_BOX\");
     for( int i = 1; i <= dynlen(allCheckboxes); i++) {
       DebugN(\"Number of checkBoxes -----> \"+ allCheckboxes[i]);
         setValue(myModuleName() + \".\" + myPanelName() + \":\" + allCheckboxes[i], \"state\",0,TRUE);        
     }
  
  
  
}
" 0
 4
"CBRef" "1"
"EClose" E
"dpi" "96"
"sizePolicy" "Fixed Maximum"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
13 1
"PUSH_BUTTON1"
""
1 243 9.32 E E E 1 E 0 E N "_ButtonText" E N "_Button" E E
 E E
0 0 0 0 0 0
E E E
8
1
LANG:1 0 

1
"layoutAlignment" "AlignNone"
1
LANG:1 27 Utopia,-1,12,5,75,0,0,0,0,0
0  241 3 270 25

T 
1
LANG:1 3 All
"main(mapping event)
{
    string node=$node;
    disableAllCheckboxes();
    loadAllPlots(node);    
    enableAllCheckboxes();
}" 0
 E E "main()
{
//   string mode=$mode;
//   if(mode==\"ValidationQA\")
//   this.visible(TRUE);
    
}" 0

0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
